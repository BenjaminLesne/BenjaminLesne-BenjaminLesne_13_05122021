{"version":3,"sources":["reportWebVitals.js","Components/Footer.jsx","img/argentBankLogo.png","Components/MainNav.jsx","Components/RequireAuthentification.jsx","Components/Hero.jsx","img/icon-chat.png","img/icon-money.png","img/icon-security.png","Components/Features.jsx","Pages/Home.jsx","Service/login.js","Service/fetchUserData.js","Components/SignInContent.jsx","Pages/SignIn.jsx","Service/updateUserData.js","Components/Header.jsx","Components/Account.jsx","Pages/User.jsx","store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","className","MainNav","isConnected","useSelector","state","firstName","dispatch","useDispatch","to","src","argentBankLogo","alt","onClick","type","RequireAuthentification","children","location","useLocation","from","Hero","Features","ChatIcon","MoneyIcon","SecurityIcon","Home","login","email","password","a","fetch","method","headers","Accept","body","JSON","stringify","rawResponse","json","jsonResponse","console","error","propTypes","PropTypes","string","isRequired","fetchUserData","token","Authorization","SignInContent","navigate","useNavigate","handleSubmit","event","document","querySelector","value","checked","preventDefault","loginResponse","status","style","display","payload","fetchUserDataResponse","userData","log","htmlFor","id","required","SignIn","updateUserData","dataToAdd","Header","useState","openEditMenu","setOpenEditMenu","lastName","lightMode","firstNameInput","getElementById","lastNameInput","handleSave","e","newData","updateUserDataResponse","newFirstName","newLastName","useEffect","placeholder","Account","title","amount","description","User","lightmode","initialState","store","createStore","action","ReactDOM","render","StrictMode","index","element","path"],"mappings":"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","file":"static/js/main.ad420caa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"../styles/Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer-text\">Copyright 2020 Argent Bank</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/argentBankLogo.e031a16c.png\";","import \"../styles/MainNav.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport argentBankLogo from \"../img/argentBankLogo.png\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst MainNav = () => {\r\n  const isConnected = useSelector((state) => state.isConnected);\r\n  const firstName = useSelector((state) => state.firstName);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <nav className=\"main-nav\">\r\n      <Link className=\"main-nav-logo\" to=\"/\">\r\n        <img\r\n          className=\"main-nav-logo-image\"\r\n          src={argentBankLogo}\r\n          alt=\"Argent Bank Logo\"\r\n        />\r\n        <h1 className=\"sr-only\">Argent Bank</h1>\r\n      </Link>\r\n      <div>\r\n        <Link className=\"main-nav-item\" to={isConnected ? \"/user\" : \"/sign-in\"}>\r\n          <i className=\"fa fa-user-circle\"></i>\r\n          {isConnected ? firstName : \"Sign In\"}\r\n        </Link>\r\n        {isConnected ? (\r\n          <Link\r\n            className=\"main-nav-item\"\r\n            onClick={() => dispatch({ type: \"handleIsConnected\" })}\r\n            to=\"/\"\r\n          >\r\n            <i className=\"fa fa-sign-out\"></i>\r\n            Sign Out\r\n          </Link>\r\n        ) : null}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nMainNav.propTypes = {\r\n  firstname: PropTypes.string,\r\n};\r\nexport default MainNav;\r\n","import \"../styles/Header.css\";\r\nimport { useLocation, Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst RequireAuthentification = ({ children }) => {\r\n  let isConnected = useSelector((state) => state.isConnected);\r\n  let location = useLocation();\r\n\r\n  if (!isConnected) {\r\n    return <Navigate to=\"/sign-in\" state={{ from: location }} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default RequireAuthentification;\r\n","import \"../styles/Hero.css\";\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <div className=\"hero\">\r\n      <section className=\"hero-content\">\r\n        <h2 className=\"sr-only\">Promoted Content</h2>\r\n        <p className=\"subtitle\">No fees.</p>\r\n        <p className=\"subtitle\">No minimum deposit.</p>\r\n        <p className=\"subtitle\">High interest rates.</p>\r\n        <p className=\"text\">Open a savings account with Argent Bank today!</p>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","export default __webpack_public_path__ + \"static/media/icon-chat.e238539d.png\";","export default __webpack_public_path__ + \"static/media/icon-money.8ec88bb1.png\";","export default __webpack_public_path__ + \"static/media/icon-security.1c819fa1.png\";","import \"../styles/Features.css\";\r\n\r\nimport ChatIcon from \"../img/icon-chat.png\"; //\"./img/icon-chat.png\"\r\nimport MoneyIcon from \"../img/icon-money.png\"; //\"./img/icon-chat.png\"\r\nimport SecurityIcon from \"../img/icon-security.png\"; //\"./img/icon-chat.png\"\r\n\r\nconst Features = () => {\r\n  return (\r\n    <section className=\"features\">\r\n      <h2 className=\"sr-only\">Features</h2>\r\n      <div className=\"feature-item\">\r\n        <img src={ChatIcon} alt=\"Chat Icon\" className=\"feature-icon\" />\r\n        <h3 className=\"feature-item-title\">You are our #1 priority</h3>\r\n        <p>\r\n          Need to talk to a representative? You can get in touch through our\r\n          24/7 chat or through a phone call in less than 5 minutes.\r\n        </p>\r\n      </div>\r\n      <div className=\"feature-item\">\r\n        <img src={MoneyIcon} alt=\"Chat Icon\" className=\"feature-icon\" />\r\n        <h3 className=\"feature-item-title\">More savings means higher rates</h3>\r\n        <p>The more you save with us, the higher your interest rate will be!</p>\r\n      </div>\r\n      <div className=\"feature-item\">\r\n        <img src={SecurityIcon} alt=\"Chat Icon\" className=\"feature-icon\" />\r\n        <h3 className=\"feature-item-title\">Security you can trust</h3>\r\n        <p>\r\n          We use top of the line encryption to make sure your data and money is\r\n          always safe.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Features;\r\n","import Hero from \"../Components/Hero\";\r\nimport Features from \"../Components/Features\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <Hero />\r\n      <Features />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst baseUrl = \"http://localhost:3001/api/v1\";\r\n\r\n/**\r\n * @function login\r\n * @param {string} email\r\n * @param {string} password\r\n * @return {object} - response from API with in its body the user token\r\n */\r\nconst login = async (email, password) => {\r\n  try {\r\n    const rawResponse = await fetch(`${baseUrl}/user/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: email, password: password }),\r\n    });\r\n\r\n    const jsonResponse = await rawResponse.json();\r\n\r\n    return jsonResponse;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nlogin.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default login;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst baseUrl = \"http://localhost:3001/api/v1\";\r\n\r\n/**\r\n * @function fetchUserData\r\n * @param {string} token - token given by a sucessful log in\r\n * @return {object} - response from API with in its body the user data\r\n */\r\nconst fetchUserData = async (token) => {\r\n  try {\r\n    const rawResponse = await fetch(`${baseUrl}/user/profile`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    const jsonResponse = await rawResponse.json();\r\n\r\n    return jsonResponse;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nfetchUserData.propTypes = {\r\n  token: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default fetchUserData;\r\n","import \"../styles/SignInContent.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport login from \"../Service/login\";\r\nimport fetchUserData from \"../Service/fetchUserData\";\r\n\r\nconst SignInContent = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isConnected = useSelector((state) => state.isConnected);\r\n\r\n  const handleSubmit = async (event) => {\r\n    const email = document.querySelector(\"#username\").value;\r\n    const password = document.querySelector(\"#password\").value;\r\n    const rememberMe = document.querySelector(\"#remember-me\").checked;\r\n\r\n    event.preventDefault();\r\n\r\n    //API request to check the login infos\r\n    const loginResponse = await login(email, password);\r\n\r\n    if (loginResponse.status === 200) {\r\n      document.querySelector(\".login-failed-message\").style.display = \"none\";\r\n\r\n      const token = loginResponse.body.token;\r\n      dispatch({ type: \"addPayloadToState\", payload: { token: token } });\r\n\r\n      /* we could store the token in localStorage and wait that the user really need its user data to fetch them but this has security risks in my opinion.\r\n      I rather fetch the user data right away. Even if the user don't need those data at the end.*/\r\n      const fetchUserDataResponse = await fetchUserData(token);\r\n      const userData = fetchUserDataResponse.body;\r\n\r\n      dispatch({ type: \"updateUserData\", payload: userData });\r\n      dispatch({ type: \"handleIsConnected\" });\r\n\r\n      navigate(`/`);\r\n    } else {\r\n      console.log(\"wrong password or username\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"sign-in-content\">\r\n      <i className=\"fa fa-user-circle sign-in-icon\"></i>\r\n      <h1>Sign In</h1>\r\n      <form>\r\n        <p className=\"login-failed-message\">Error: wrong login</p>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input type=\"email\" id=\"username\" required />\r\n          <p className=\"error-message\">An email is required</p>\r\n        </div>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" required />\r\n          <p className=\"error-message\">A password is required</p>\r\n        </div>\r\n        <div className=\"input-remember\">\r\n          <input type=\"checkbox\" id=\"remember-me\" />\r\n          <label htmlFor=\"remember-me\">Remember me</label>\r\n        </div>\r\n        {/* <!-- PLACEHOLDER DUE TO STATIC SITE --> */}\r\n        {/* <a href=\"./user.html\" className=\"sign-in-button\">\r\n          Sign In\r\n        </a> */}\r\n        {/* <!-- SHOULD BE THE BUTTON BELOW --> */}\r\n        <button className=\"sign-in-button\" onClick={handleSubmit}>\r\n          Sign In\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignInContent;\r\n","import SignInContent from \"../Components/SignInContent\";\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <main className=\"main bg-dark\">\r\n      <SignInContent />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst baseUrl = \"http://localhost:3001/api/v1\";\r\n\r\n/**\r\n * @function updateUserData\r\n * @param {Object} dataToAdd - token given by a sucessful log in\r\n * @param {String} token - token needed for being authentified\r\n * @return {Object} - response from API with in its body the user id and email\r\n */\r\nconst updateUserData = async (dataToAdd, token) => {\r\n  try {\r\n    const rawResponse = await fetch(`${baseUrl}/user/profile`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(dataToAdd),\r\n    });\r\n\r\n    const jsonResponse = await rawResponse.json();\r\n\r\n    return jsonResponse;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false;\r\n  }\r\n};\r\n\r\nupdateUserData.propTypes = {\r\n  token: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default updateUserData;\r\n","import \"../styles/Header.css\";\r\nimport \"../styles/UpdateUserNames.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport updateUserData from \"../Service/updateUserData\";\r\n\r\nconst Header = () => {\r\n  const [openEditMenu, setOpenEditMenu] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const firstName = useSelector((state) => state.firstName);\r\n  const lastName = useSelector((state) => state.lastName);\r\n  const lightMode = useSelector((state) => state.lightMode);\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const firstNameInput = document.getElementById(\"input-firstname\");\r\n  const lastNameInput = document.getElementById(\"input-lastname\");\r\n\r\n  /**\r\n   * @function handleSave - trigger updateUserData(), then trigger \"addPayloadToState\" to update redux state and close the names edit menu\r\n   * @param {Object} e - the click event\r\n   */\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    const newData = {\r\n      firstName: firstNameInput.value,\r\n      lastName: lastNameInput.value,\r\n    };\r\n\r\n    const updateUserDataResponse = await updateUserData(newData, token);\r\n\r\n    //get data from API response to make sure the data base and the redux state are synchronized\r\n    const newFirstName = updateUserDataResponse.body.firstName;\r\n    const newLastName = updateUserDataResponse.body.lastName;\r\n\r\n    const updatedUserData = { lastName: newLastName, firstName: newFirstName };\r\n    dispatch({ type: \"addPayloadToState\", payload: updatedUserData });\r\n\r\n    setOpenEditMenu(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"changeLightMode\", payload: openEditMenu });\r\n  }, [openEditMenu]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className={`header__title--${lightMode ? \"light\" : \"\"}`}>\r\n        Welcome back\r\n        <br />\r\n        {openEditMenu ? \"\" : firstName + \" \" + lastName + \"!\"}\r\n      </h1>\r\n      {openEditMenu ? (\r\n        <form className=\"UpdateUserNames\">\r\n          <div className=\"UpdateUserNames__inputs\">\r\n            <input\r\n              className=\"UpdateUserNames__input\"\r\n              type=\"text\"\r\n              placeholder=\"Firstname\"\r\n              id=\"input-firstname\"\r\n            />\r\n            <input\r\n              className=\"UpdateUserNames__input\"\r\n              type=\"text\"\r\n              placeholder=\"Lastname\"\r\n              id=\"input-lastname\"\r\n            />\r\n          </div>\r\n          <div className=\"UpdateUserNames__buttons\">\r\n            <button\r\n              className=\"UpdateUserNames__button\"\r\n              type=\"onSubmit\"\r\n              onClick={(event) => handleSave(event)}\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              className=\"UpdateUserNames__button\"\r\n              type=\"button\"\r\n              onClick={() => setOpenEditMenu(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <button className=\"edit-button\" onClick={() => setOpenEditMenu(true)}>\r\n          Edit Name\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"../styles/Account.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Account = ({ title, amount, description }) => {\r\n  return (\r\n    <section className=\"account\">\r\n      <div className=\"account-content-wrapper\">\r\n        <h3 className=\"account-title\">{title}</h3>\r\n        <p className=\"account-amount\">${amount}</p>\r\n        <p className=\"account-amount-description\">{description}</p>\r\n      </div>\r\n      <div className=\"account-content-wrapper cta\">\r\n        <button className=\"transaction-button\">View transactions</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nAccount.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  amount: PropTypes.number,\r\n};\r\n\r\nexport default Account;\r\n","import Header from \"../Components/Header\";\r\nimport Account from \"../Components/Account\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst User = () => {\r\n  const lightmode = useSelector((state) => state.lightMode);\r\n  return (\r\n    <main className={`main ${lightmode ? \" bg-light\" : \" bg-dark\"}`}>\r\n      <Header />\r\n      <h2 className=\"sr-only\">Accounts</h2>\r\n      <Account\r\n        title={\"Argent Bank Checking (x8349)\"}\r\n        description={\"Available Balance\"}\r\n        amount={2.08279}\r\n      />\r\n      <Account\r\n        title={\"Argent Bank Savings (x6712)\"}\r\n        description={\"Available Balance\"}\r\n        amount={10.92842}\r\n      />\r\n      <Account\r\n        title={\"Argent Bank Credit Card (x8349)\"}\r\n        description={\"Current Balance\"}\r\n        amount={184.3}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { createStore } from \"redux\";\r\n\r\n/**\r\n * action type definition\r\n * @typedef {Object} action\r\n * @property {string} type - this string allows to know what to do with this action.\r\n * @property {*} [payload]\r\n */\r\n\r\nconst initialState = {\r\n  isConnected: false,\r\n  firstName: \"Tony\",\r\n  lastName: \"Couille\",\r\n  lightMode: false,\r\n};\r\n\r\n/**\r\n * @function reducer - there are only 4 actions... so using combineReducers, createSlice etc was a bit overkill to me.\r\n * @param {Object} state - the redux state\r\n * @param {action} action - an object with at least a type: \"actionToGive\"\r\n * @returns {Object} - the new state after an action has been done to it.\r\n */\r\n\r\nfunction reducer(state = initialState, action) {\r\n  if (action.type === \"handleIsConnected\") {\r\n    return { ...state, isConnected: !state.isConnected };\r\n  }\r\n\r\n  if (action.type === \"addPayloadToState\") {\r\n    return { ...state, ...action.payload };\r\n  }\r\n\r\n  if (action.type === \"changeLightMode\") {\r\n    return { ...state, lightMode: action.payload };\r\n  }\r\n\r\n  if (action.type === \"updateUserData\") {\r\n    return { ...state, ...action.payload };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport const store = createStore(reducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\n//Components and Pages\nimport Footer from \"./Components/Footer\";\nimport MainNav from \"./Components/MainNav\";\nimport RequireAuthentification from \"./Components/RequireAuthentification\";\n\nimport Home from \"./Pages/Home\";\nimport SignIn from \"./Pages/SignIn\";\nimport User from \"./Pages/User\";\n\n//dependdencies\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <MainNav firstName=\"Tony\" />\n        <Routes>\n          <Route index element={<Home />} />\n          <Route path=\"/sign-in\" element={<SignIn />} />\n\n          <Route\n            path=\"/user\"\n            element={\n              <RequireAuthentification>\n                <User />\n              </RequireAuthentification>\n            }\n          />\n        </Routes>\n        <Footer />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}